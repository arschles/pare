version: 2
jobs:
  build:
    working_directory: /go/src/github.com/arschles/pare
    docker:
      - image: quay.io/deis/go-dev:v1.2.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: dep ensure
      - run:
          name: Run build
          command: go build -o pare .
  test:
    working_directory: /go/src/github.com/arschles/pare
    docker:
       - image: quay.io/deis/go-dev:v1.2.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: dep ensure
      - run:
          name: Run tests
          command: go test ./...
  linux:
    working_directory: /go/src/github.com/arschles/pare
    docker:
      - image: quay.io/deis/go-dev:v1.2.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: dep ensure
      - run:
          name: Build for linux
          command: go build -o /crossbuilds/pare_linux_amd64 .
          environment:
            - CGO_ENABLED: 0
            - GOOS: linux
            - GOARCH: amd64
      - persist_to_workspace:
          root: /crossbuilds
          paths:
            - pare_linux_amd64
  darwin:
    working_directory: /go/src/github.com/arschles/pare
    docker:
      - image: quay.io/deis/go-dev:v1.2.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: dep ensure
      - run:
          name: Build
          command:  go build -o /crossbuilds/pare_darwin_amd64 .
          environment:
            - CGO_ENABLED: 0
            - GOOS: darwin
            - GOARCH: amd64
      - persist_to_workspace:
          root: /crossbuilds
          paths:
            - pare_darwin_amd64
  windows:
    working_directory: /go/src/github.com/arschles/pare
    docker:
      - image: quay.io/deis/go-dev:v1.2.0
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: dep ensure
      - run:
          name: Build for linux
          command: go build -o /crossbuilds/pare_windows_amd64.exe .
          environment:
            - CGO_ENABLED: 0
            - GOOS: windows
            - GOARCH: amd64
      - persist_to_workspace:
          root: /crossbuilds
          paths:
            - pare_windows_amd64.exe
  deploy:
    working_directory: /go/src/github.com/arschles/pare
    docker:
      - image: google/cloud-sdk:slim
    steps:
      - attach_workspace:
          at: /crossbuilds
      - run:
          name: Activate GCS
          command: |
            echo $GOOGLE_JSON >> secret.json
            gcloud auth activate-service-account --key-file secret.json
          working_directory: scripts
          environment:
            - CLOUDSDK_PYTHON_SITEPACKAGES: 1
      - run:
          name: Upload to GCS
          command: |
            ls -la cross
            gsutil -m cp -r /crossbuilds/* gs://$GOOGLE_BUCKET
            gsutil -m acl -r set public-read gs://$GOOGLE_BUCKET/*
            gsutil -m setmeta -h "Cache-Control:public, max-age=0" gs://$GOOGLE_BUCKET/*
workflows:
  version: 2
  master:
    jobs:
      - build:
          filters:
            branches:
              only: master
      - test:
          filters:
            branches:
              only: master
      - linux:
          filters:
            branches:
              only: master
      - darwin:
          filters:
              branches:
                only: master
      - windows:
          filters:
            branches:
              only: master
      - deploy:
          requires:
            - build
            - test
            - linux
            - darwin
            - windows
          filters:
            branches:
              only: master
